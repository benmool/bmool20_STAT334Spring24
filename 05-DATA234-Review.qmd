---
title: "05-DATA234-Review"
author: "Ben Moolman"
format:
  html:
    embed-resources: true
---

### Section 5.3 Your Turn

#### Exercise 2

You may have used a SLU majors data set in DATA/STAT 234, but now, we will use a data set that is a little different in that it shows the major/minor combination of each student. That is, instead of each row being a major, each row is an individual student. This allows us to look at more detailed questions about what students tend to double-major or minor in. The data was obtained from Christine Zimmerman in SLUâ€™s Institutional Research Office and contains data on all graduating students in the past 7 years.

The variables in the data set are:

  * `adm_id`, a unique ID assigned to each student
  
  * `sex`, the sex of the student
  
  * `major1`, `major2`, `major3`, `minor1`, `minor2`, `minor3`, the majors and minors of the student

Using this data set, construct a visualization that explores gender balance within each of the majors at SLU. We will begin this exercise by sketching out what we want to create as a class.

Load in libraries and data
```{r}
library(tidyverse)
library(readxl)
library(here)
df <- read_excel(here::here("data/slu_graduates_17_23.xlsx"))

## fixes error in the data
df <- df |> mutate(across(everything(),
                          .fns = ~replace(., . ==  "STATS" , "STAT")))

majors_plot <- df |> select(-starts_with("minor")) |>
  pivot_longer(starts_with("major"), names_to = "major_num",
               values_to = "major") |>
  filter(!is.na(major)) |>
  ## mutate(sex_ind = if_else(sex == "M", true = 1, false = 0))
  group_by(sex, major) |>
  summarise(n_majors = n()) |>
  ungroup() |> 
  pivot_wider(names_from = sex, values_from = n_majors) |> 
  mutate(prop_male = M / (M + `F`))

ggplot(data = majors_plot, aes(x = major, y = prop_male)) +
  geom_segment(aes(xend = major, y = 0, yend = prop_male)) +
  geom_point()
```

What should we change or add?

  * descending order
      * fct_reorder()
  
  * flip coordinates
  
  * theme/colour/aesthetics
  
  * exclude majors that do not meet the cut off for total M + F and do not represent the major very well (we will only include majors with >= 70 students)
      
```{r}
majors_plot2 <- df |> select(-starts_with("minor")) |>
  pivot_longer(starts_with("major"), names_to = "major_num",
               values_to = "major") |>
  filter(!is.na(major)) |>
  ## mutate(sex_ind = if_else(sex == "M", true = 1, false = 0))
  group_by(sex, major) |>
  summarise(n_majors = n()) |>
  ungroup() |> 
  pivot_wider(names_from = sex, values_from = n_majors) |> 
  mutate(prop_male = M / (M + `F`),
         total_students = `F` + M) |>
  filter(total_students >= 70) |>
  mutate(major = fct_reorder(major, prop_male))
  
ggplot(data = majors_plot2, aes(x = major, y = prop_male)) +
  geom_segment(aes(xend = major, y = 0, yend = prop_male)) +
  geom_point() +
  coord_flip() +
  theme_minimal()
```

Do a few more things:

  * Bump up the size of the proportion numbers
  
  * "highlight" the MATH, STAT, CS majors
  
```{r}
mcss_df <- majors_plot2 |> filter(major %in% c("STAT", "MATH", "CS"))

ggplot(data = majors_plot2, aes(x = major, y = prop_male)) +
  geom_segment(aes(xend = major, y = 0, yend = prop_male)) +
  geom_point() +
  geom_segment(data = mcss_df, aes(xend = major, y = 0, yend = prop_male), 
               colour = "hotpink1", linewidth = 1.2) +
  geom_point(data = mcss_df, colour = "hotpink4", size = 2.5) + 
  coord_flip() +
  theme_minimal() +
  theme(axis.text.x = element_text(size = 12)) +
  labs(title = "Proportion of Male Students per Major at St. Lawrence University",
       subtitle = "Using n >= 70 for majors included",
       caption = "Data Source: SLU Institutional Research Office")
```

  


